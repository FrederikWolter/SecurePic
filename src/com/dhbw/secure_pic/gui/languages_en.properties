back.btn=Back
coding.algorithm.tooltip=Coding Algorithm
cont.img.for.public.key.lbl=Container Image for Public Key
decode.btn=Decode
pbl.key.into.cont.img.checkbox=Encode public Key into selected Container Image
encrypting.algorithm.tooltip=Encrypting Algorithm
gen.key.btn=Generate Key
dad.instr.lbl=Path
rec.cont.img.lbl=Received Container Image
upload.btn=Upload
send.btn=Send
receive.btn=Receive
close.btn=Close
send.descr.btn=Use this if you want to send a message \n\n After you have decided on an encryption method in the next step, you can then encode a message or an image into a so-called container image using selected algorithms. With this method, no difference to the original image is then visible to the naked eye.
rec.descr.btn=Use this if you want to receive a message \n\n After you choose the corresponding encoding method in the next step. You can then decode the carrier image you received with the algorithm used for encoding. At the end of the process you will see the hidden message.
secret.btn=Secret Button
image.radiobtn=Image
textmessage.btn=Textmessage
encode.btn=Encode
export.btn=Export
copy.to.clipboard.btn=Copy to Clipboard
drag.and.drop.upload=Drag and Drop Upload
no.encr.btn=No Encryption
symm.btn=Symmetrical
asymm.btn=Asymmetrical
from.lbl=From
png.radiobtn=PNG
jpeg.radiobtn=JPEG
gif.radiobtn=GIF
to.lbl=To
pdf.radiobtn=PDF
convert.btn=Convert
upload.file.to.convert.lbl=Upload your file to convert it!
sw.created.by.lbl=This Software is created by
thanks.lbl=Thanks for using it!
private.key.lbl=Private Key
public.key.lbl=Public Key
public.key.image.lbl=Private Key Image
input.private.key.lbl=Input private Key
choose.coding.algo.lbl=Choose Coding Algorithm
choose.encr.algo.lbl=Choose Encrypting Algorithm
label=Label englisch
pw.lbl=Password
msg.lbl=Message
pw.for.encr.lbl=Password for encryption
no.encr.descr.btn=Use this if you want no encryption. \n  With this method, your message is encoded without any additional encryption.
symm.encr.descr.btn=Use this if you want symmetrical encryption. \n With symmetric encryption, your message is encrypted before encoding using a password you specify. On the receiving end, the same password is then used to decrypt the sent message.
asymm.encr.descr.btn=Use this if you want asymmetrical encryption. \n In asymmetric encryption, two keys are first generated on the receiver side. The sender uses the public key to encrypt the message to be encoded. The recipient can then use the private key to decrypt the message.
progress.lbl=Progress
pbl.key.text.lb.=Öffentlicher Schlüssel als Text